(()=>{"use strict";new(function(){function t(t){this.interval=1,this.options={cellsX:100,cellsY:100,cellSize:10,gridColor:"#3730a3",cellColor:"#ccc"},this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d");var i=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0),s=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);this.options.cellsX=Math.floor(i/this.options.cellSize),this.options.cellsY=Math.floor(s/this.options.cellSize),this.update()}return t.prototype.update=function(){var t=this;this.canvas.width=this.options.cellsX*this.options.cellSize,this.canvas.height=this.options.cellsY*this.options.cellSize,this.matrix=new Array(this.options.cellsX);for(var i=0;i<this.matrix.length;i++){this.matrix[i]=new Array(this.options.cellsY);for(var s=0;s<this.matrix[i].length;s++)this.matrix[i][s]=!1}this.randomize(),setInterval((function(){t.step(),t.draw()}),this.interval)},t.prototype.step=function(){for(var t=new Array(this.matrix.length),i=0;i<t.length;i++)t[i]=new Array(this.matrix[i].length);for(i=0;i<this.matrix.length;i++)for(var s=0;s<this.matrix[i].length;s++){var o=this.countNeighbours(i,s);this.matrix[i][s]?(2!=o&&3!=o||(t[i][s]=!0),(o<2||o>3)&&(t[i][s]=!1)):3==o&&(t[i][s]=!0)}this.matrix=t},t.prototype.draw=function(){this.canvas.width=this.canvas.width,this.ctx.strokeStyle=this.options.gridColor,this.ctx.fillStyle=this.options.cellColor;for(var t=.5;t<this.options.cellsX*this.options.cellSize;t+=this.options.cellSize)this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.options.cellsY*this.options.cellSize);for(var i=.5;i<this.options.cellsY*this.options.cellSize;i+=this.options.cellSize)this.ctx.moveTo(0,i),this.ctx.lineTo(this.options.cellsX*this.options.cellSize,i);for(this.ctx.stroke(),t=0;t<this.matrix.length;t++)for(i=0;i<this.matrix[t].length;i++)this.matrix[t][i]&&this.ctx.fillRect(t*this.options.cellSize+1,i*this.options.cellSize+1,this.options.cellSize-1,this.options.cellSize-1)},t.prototype.countNeighbours=function(t,i){for(var s=0,o=t-1;o<=t+1;o++)for(var e=i-1;e<=i+1;e++)o==t&&e==i||o<0||o>=this.matrix.length||e<0||e>=this.matrix[o].length||this.matrix[o][e]&&s++;return s},t.prototype.randomize=function(){for(var t=0;t<this.matrix.length;t++)for(var i=0;i<this.matrix[t].length;i++)this.matrix[t][i]=Math.random()<.3},t}())("gol-canvas")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,